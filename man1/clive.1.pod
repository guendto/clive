=head1 NAME

clive - command line video extraction tool

=head1 DESCRIPTION

clive is a command line video extraction tool for Youtube and other similar
video websites that require Adobe Flash for viewing the content.

=head1 OPTIONS

=over 4

=item B<--help>

Print help and exit.

=item B<--version>

Print version and exit.

=item B<--license>

Print license and exit.

=item B<--quiet>

Turn off all I<clive> output excluding errors. Note that this switch has no
effect on any of the third party commands that clive calls.

=item B<-f, --format> I<arg>

Download I<arg> format of the video. Run C<quvi(1)> with C<--support> to get
a list of the supported formats.

=item B<-O, --output-file> I<arg>

Write video to I<arg>.

=item B<-n, --no-download>

Do not download the video, display video details only.

=item B<--config-file> I<arg>

Path to a file to read clive arguments from. By default clive reads
from C<~/.cliverc>, C<~/.clive/config> and C<~/.config/clive/config>.

=back

=head1 OPTIONS - CONFIGURATION

You can specify I<any> of the the command line options in the configuration
file. These options are under C<Configuration> for superficial reasons
(C<--help> output) only.


=over 4

=item B<--quvi> I<arg>

Path to C<quvi(1)> command with any additional arguments. clive calls this
command to parse the video details (e.g. download URL). The following
specifiers are supported:

    %u  Video URL

Note that I<all> occurences of the specifier will be replaced. clive also
appends C<--quiet> to I<arg> if it's not found.

If you use an HTTP proxy with C<quvi(1)>, you should do the same with
C<--get-with>, especially the proxy masks your IP. Some websites refuse
to work with requests for unique URLs coming from different IPs.

=item B<--get-with> I<arg>

Path to a download command (e.g. C<wget(1)> or C<curl(1)>) with any additional
arguments. clive calls this command to download the video. The following
specifiers are supported:

    %u  Video download URL
    %f  Full path to video file
    %n  Video file name

Note that I<all> occurences of the specifier will be replaced. See also the
note above about using an HTTP proxy with C<--quvi>.

=item B<--filename-format> I<arg>

Use I<arg> to specify the video output filename format. The default is "%t.%s".
The following specifiers are supported:

    %t  Video title (after applying --regexp)
    %i  Video ID
    %h  Video host ID (req. quvi 0.2.8+)
    %s  Video file suffix (parsed from server returned content-type)

Note that I<all> occurences of the specifier will be replaced.

=item B<--regexp> I<arg>

Use regular expression I<arg> to clean up the video title before
it is used in the output filename. The default is "/(\w|\s)/g".

Note that the syntax supports both "i" (case-insensitive) and "g"
(global or find all).

=item B<--exec> I<arg>

Invoke I<arg> after video download finishes. The following specifiers
are supported:

    %f  Full path to the downloaded video file

Note that I<all> occurences of the specifier will be replaced.

=back

=head1 EXAMPLES

These examples assume you have set C<--quvi> and C<--get-with> in the config
file. See L</FILES> for an example config file.

=over 4

=item B<clive "http://www.youtube.com/watch?v=DUM1284TqFc">

Typical use.

=item B<clive "http://www.youtube.com/watch?v=DUM1284TqFc" -f sd_270p>

Same but get the sd_270p (Youtube specific) format instead. See
C<--support> for a complete list of websites and formats.

=item B<clive "http://www.youtube.com/watch?v=DUM1284TqFc" -n>

Do not download the video. Print the video details only.

=item B<echo "http://www.youtube.com/watch?v=DUM1284TqFc" | clive>

Yet another way to feed clive with an URL.

You can also feed clive several URLs on one go, either by adding each on
the command line (arg1, arg2, ...) or by redirecting them, for example,
from a file. Each URL must be separated with a newline.

Consider the following example:

  % cat >> urls.lst
  http://www.youtube.com/watch?v=DUM1284TqFc
  http://www.youtube.com/watch?v=TqgTz8ymZl8
  (ctrl+d)
  % clive < urls.lst

=back

=head1 FILES

=over 4

=item B<~/.clive>

=item B<~/.clive/config>

=item B<~/.config/clive/config>

You can also run clive with C<--config-file /path/to/config/file>. Typical
configuration file could look like:

    --quvi "/usr/bin/quvi %u"
    --get-with "/usr/bin/curl -L -C - -o %f %u"
    --filename-format "%t_%i.%s"
    --exec "/usr/bin/vlc %f"

You should consider setting at least the C<--quvi> and C<--get-with>.
Note also the prepending dashes in the option names.

=back

=head1 EXIT STATUS

clive exits with 0 on success, otherwise the code is E<gt>0. clive exits with
1 if an error occurred while parsing the command line arguments.

You should note that clive passes whatever any of the other commands it
calls as its exit status. For example, if C<quvi(1)> a non-zero value,
clive exits with it. Refer to the documentation of those commands for the
different exit statuses.

If you are planning to use clive for anything more peculiar, you should
feed clive with only one URL at a time, because clive exits with the
"last exit status". To illustrate this:

    * You feed clive with two URLs
    * First URL fails for some reason, quvi exits with a non-zero value
    * Second URL succeeds, quvi exits with a zero value
    * clive exits with zero

=head1 MANGLED CHARACTERS

Check your terminal settings for an invalid locale setting. You can get
a list of the available locale names by running C<locale -a>. Also, make
sure your terminal supports unicode. e.g.:

    % LANG=en_US.UTF8 urxvt&
    % clive ... # in the new opened terminal

libquvi (which clive ultimately uses) converts the characters to unicode
if the parsed data contains the charset meta tag. Otherwise the characters
are copied from the original content as they are without any conversion.

=head1 CONTRIBUTING

=over 4

=item B<Add support for a website>

This is quvi(1) territory, please visit L<http://quvi.googlecode.com/>.

You can also find the the READMEs and HOWTOs (on most systems) from
$prefix/share/quvi and $prefix/share/doc/quvi directories. Or visit:

    <http://repo.or.cz/w/quvi.git/tree/HEAD:/doc>
    <http://repo.or.cz/w/quvi.git/tree/HEAD:/share/lua>

=item B<Submitting patches>

If you have cooked up a patch, please submit it to the tracker see L</OTHER>.
Pull requests from git repos are also welcome.

=back

=head1 OTHER

<http://clive.googlecode.com/>

<http://sourceforge.net/projects/clive/support>

<git://repo.or.cz/clive.git>

=head1 SEE ALSO

C<quvi(1)>  C<wget(1)>  C<curl(1)>

=head1 AUTHOR

Toni Gundogdu <legatvs at sign gmail com>.
